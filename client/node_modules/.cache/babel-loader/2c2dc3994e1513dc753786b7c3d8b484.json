{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jinkim/jinho_black/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jinkim/jinho_black/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jinkim/jinho_black/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import axios from'axios';import'./styles/Modal.scss';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ChatListModal=function ChatListModal(props){var open=props.open,close=props.close,MyID=props.MyID;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),NewRoomName=_useState2[0],setNewRoomName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),RoomPWD=_useState4[0],setRoomPWD=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),IsProtectedRoom=_useState6[0],setIsProtectedRoom=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),IsUniqueName=_useState8[0],setIsUniqueName=_useState8[1];var handleRoomNameChange=useCallback(function(e){setNewRoomName(e.target.value);},[]);var handelRoomPWD=useCallback(function(e){setRoomPWD(e.target.value);},[]);var ProtectedRoomCheckHandler=useCallback(function(e){setRoomPWD('');setIsProtectedRoom(!IsProtectedRoom);},[IsProtectedRoom]);function makeNewChat(){return _makeNewChat.apply(this,arguments);}function _makeNewChat(){_makeNewChat=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var security;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(RoomPWD==='')security='public';else security='protected';_context.next=3;return axios.post('/Lobby/chatCreate',{title:NewRoomName,password:RoomPWD,owner_id:MyID,security:security}).then(function(res){document.location.href='/chat';sessionStorage.setItem('roomName',NewRoomName);}).catch(function(err){setIsUniqueName(false);});case 3:case\"end\":return _context.stop();}}},_callee);}));return _makeNewChat.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{className:open?'openModal Modal':'Modal',children:open?/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[\"New Chatting Room\",/*#__PURE__*/_jsxs(\"button\",{className:\"close\",onClick:close,children:[' ',\"\\xD7\",' ']})]}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Room Name:\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleRoomNameChange,maxLength:20})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\xA0\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:IsProtectedRoom,onChange:function onChange(e){return ProtectedRoomCheckHandler(e);}}),' ',\"protected\"]}),IsUniqueName?null:/*#__PURE__*/_jsx(\"label\",{className:\"error\",children:\"\\uC720\\uD6A8\\uD558\\uC9C0 \\uC54A\\uC740 \\uAC12\\uC785\\uB2C8\\uB2E4.\"}),IsProtectedRoom?/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-pwd\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"password:\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:handelRoomPWD})]}):null]}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"a\",{className:\"btn btn-primary\",onClick:makeNewChat,children:/*#__PURE__*/_jsx(\"b\",{children:\"Enter\"})})})]}):null});};export default ChatListModal;","map":{"version":3,"sources":["/Users/jinkim/jinho_black/client/src/Lobby/ChatListModal.tsx"],"names":["React","useState","useCallback","axios","ChatListModal","props","open","close","MyID","NewRoomName","setNewRoomName","RoomPWD","setRoomPWD","IsProtectedRoom","setIsProtectedRoom","IsUniqueName","setIsUniqueName","handleRoomNameChange","e","target","value","handelRoomPWD","ProtectedRoomCheckHandler","makeNewChat","security","post","title","password","owner_id","then","res","document","location","href","sessionStorage","setItem","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport './styles/Modal.scss';\n\nconst ChatListModal = (props: any) => {\n  const { open, close, MyID } = props;\n\n  const [NewRoomName, setNewRoomName] = useState('');\n  const [RoomPWD, setRoomPWD] = useState('');\n  const [IsProtectedRoom, setIsProtectedRoom] = useState(false);\n  const [IsUniqueName, setIsUniqueName] = useState(true);\n\n  const handleRoomNameChange = useCallback((e: any) => {\n    setNewRoomName(e.target.value);\n  }, []);\n  const handelRoomPWD = useCallback((e: any) => {\n    setRoomPWD(e.target.value);\n  }, []);\n\n  const ProtectedRoomCheckHandler = useCallback(\n    (e: any) => {\n      setRoomPWD('');\n      setIsProtectedRoom(!IsProtectedRoom);\n    },\n    [IsProtectedRoom],\n  );\n\n  async function makeNewChat() {\n    if (RoomPWD === '') var security = 'public';\n    else var security = 'protected';\n    await axios\n      .post('/Lobby/chatCreate', {\n        title: NewRoomName,\n        password: RoomPWD,\n        owner_id: MyID,\n        security: security,\n      })\n      .then((res) => {\n        document.location.href = '/chat';\n        sessionStorage.setItem('roomName', NewRoomName);\n      })\n      .catch((err) => {\n        setIsUniqueName(false);\n      });\n  }\n\n  return (\n    <div className={open ? 'openModal Modal' : 'Modal'}>\n      {open ? (\n        <section>\n          <header>\n            New Chatting Room\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <label>\n              <b>Room Name:&nbsp;</b>\n              <input onChange={handleRoomNameChange} maxLength={20}></input>\n            </label>\n            <label>\n              &nbsp;&nbsp;\n              <input\n                type=\"checkbox\"\n                checked={IsProtectedRoom}\n                onChange={(e) => ProtectedRoomCheckHandler(e)}\n              ></input>{' '}\n              protected\n            </label>\n            {IsUniqueName ? null : (\n              <label className=\"error\">유효하지 않은 값입니다.</label>\n            )}\n            {IsProtectedRoom ? (\n              <div className=\"checkbox-pwd\">\n                <b>password:&nbsp;</b>\n                <input type=\"password\" onChange={handelRoomPWD}></input>\n              </div>\n            ) : null}\n          </main>\n          <footer>\n            <a className=\"btn btn-primary\" onClick={makeNewChat}>\n              <b>Enter</b>\n            </a>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChatListModal;\n"]},"metadata":{},"sourceType":"module"}